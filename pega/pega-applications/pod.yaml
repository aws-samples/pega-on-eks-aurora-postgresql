apiVersion: v1
kind: Pod
metadata:
  labels:
    app: pega-web
  namespace: pega-web
spec:
  containers:
  - env:
    - name: NODE_TYPE
      value: WebUser
    - name: PEGA_APP_CONTEXT_PATH
      value: prweb
    - name: REQUESTOR_PASSIVATION_TIMEOUT
      value: "900"
    - name: JAVA_OPTS
    - name: CATALINA_OPTS
    - name: INITIAL_HEAP
      value: 4096m
    - name: MAX_HEAP
      value: 8192m
    - name: NODE_TIER
      value: web
    - name: RETRY_TIMEOUT
      value: "30"
    - name: MAX_RETRIES
      value: "4"
    envFrom:
    - configMapRef:
        name: pega-environment-config
    image: pega:8.6.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /prweb/PRRestService/monitor/pingService/ping
        port: 8081
        scheme: HTTP
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 20
    name: pega-web-tomcat
    ports:
    - containerPort: 8080
      name: pega-web-port
      protocol: TCP
    - containerPort: 8443
      name: pega-tls-port
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /prweb/PRRestService/monitor/pingService/ping
        port: 8080
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    resources:
      limits:
        cpu: "4"
        memory: 12Gi
      requests:
        cpu: "3"
        memory: 12Gi
    startupProbe:
      failureThreshold: 30
      httpGet:
        path: /prweb/PRRestService/monitor/pingService/ping
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/pega/config
      name: pega-volume-config
    - mountPath: /opt/pega/secrets
      name: pega-volume-credentials
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hsjnm
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: pega-registry-secret
  - name: pega2-ecr-credentials
  initContainers:
  - command:
    - sh
    - -c
    - until $(wget -q -S --spider --timeout=2 -O /dev/null http://pega-search); do
      echo Waiting for search to become live...; sleep 10; done;
    image: busybox:1.31.0
    imagePullPolicy: IfNotPresent
    name: wait-for-pegasearch
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hsjnm
      readOnly: true
  - command:
    - sh
    - -c
    - until cqlsh -u "dnode_ext" -p "dnode_ext" -e "describe cluster" pega-cassandra
      9042 ; do echo Waiting for cassandra to become live...; sleep 10; done;
    image: cassandra:3.11.3
    imagePullPolicy: IfNotPresent
    name: wait-for-cassandra
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hsjnm
      readOnly: true
  nodeName: ip-10-0-3-134.ec2.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 0
    runAsUser: 9001
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 300
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: pega-web
    name: pega-volume-config
  - name: pega-volume-credentials
    csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "aws-secret-manager-secrets"
  - name: kube-api-access-hsjnm
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-03T22:43:28Z"
    message: 'containers with incomplete status: [wait-for-pegasearch wait-for-cassandra]'
    reason: ContainersNotInitialized
    status: "False"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-08-03T22:43:28Z"
    message: 'containers with unready status: [pega-web-tomcat]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-08-03T22:43:28Z"
    message: 'containers with unready status: [pega-web-tomcat]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-08-03T22:43:28Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: pega:8.6.0
    imageID: ""
    lastState: {}
    name: pega-web-tomcat
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: PodInitializing
  hostIP: 10.0.3.134
  initContainerStatuses:
  - image: busybox:1.31.0
    imageID: ""
    lastState: {}
    name: wait-for-pegasearch
    ready: false
    restartCount: 0
    state:
      waiting:
        reason: PodInitializing
  - image: cassandra:3.11.3
    imageID: ""
    lastState: {}
    name: wait-for-cassandra
    ready: false
    restartCount: 0
    state:
      waiting:
        reason: PodInitializing
  phase: Pending
  qosClass: Burstable
  startTime: "2023-08-03T22:43:28Z"
